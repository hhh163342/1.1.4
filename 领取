// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Airdrop {
    address public owner;
    mapping(address => uint256) public balances;

    constructor() {
        owner = msg.sender;
    }

    // 仅限合约拥有者调用
    function airdrop(address[] calldata recipients, uint256 amount) external {
        require(msg.sender == owner, "Only owner can airdrop");
        for (uint256 i = 0; i < recipients.length; i++) {
            balances[recipients[i]] += amount;
        }
    }

    // 领取空投
    function claim() external {
        uint256 amount = balances[msg.sender];
        require(amount > 0, "No airdrop available");
        balances[msg.sender] = 0;
        // 这里可以添加转账逻辑，例如转账代币
        // token.transfer(msg.sender, amount);
